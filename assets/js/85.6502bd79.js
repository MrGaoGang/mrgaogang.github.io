(window.webpackJsonp=window.webpackJsonp||[]).push([[85],{423:function(t,a,s){"use strict";s.r(a);var n=s(1),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"ios-开发常见问题汇总"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ios-开发常见问题汇总","aria-hidden":"true"}},[t._v("#")]),t._v(" iOS 开发常见问题汇总")]),t._v(" "),s("h2",{attrs:{id:"weakself使用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#weakself使用场景","aria-hidden":"true"}},[t._v("#")]),t._v(" _weakSelf使用场景")]),t._v(" "),s("p",[s("router-link",{attrs:{to:"/ios/question/_weakSelf使用场景.html"}},[t._v("_weakSelf使用场景")])],1),t._v(" "),s("h2",{attrs:{id:"property-和-synthesize-和-dynamic"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#property-和-synthesize-和-dynamic","aria-hidden":"true"}},[t._v("#")]),t._v(" @property 和@synthesize 和 @dynamic")]),t._v(" "),s("p",[s("strong",[t._v("@property 的本质：")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("@property "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ivar"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("实例变量"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" + getter/setter（存取方法）"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("在 iOS5 之后，更换为 LLVM 之后，编译器在编译过程中发现没有新的实例变量后，就会生成一个下划线开头的实例变量。因此现在我们不必在声明一个实例变量。（注意：==是不必要，不是不可以==） 当然我们也熟知，"),s("strong",[t._v("@property 声明的属性不仅仅默认给我们生成一个_类型的成员变量，同时也会生成 setter/getter 方法。在.m 文件中，编译器也会自动的生成一个成员变量_myString")]),t._v("。"),s("code",[t._v("那么在.m文件中可以直接的使用_myString成员变量，也可以通过属性self.myString.都是一样的")]),t._v("。"),s("strong",[t._v("注意这里的 self.myString 其实是调用的 myString 属性的 setter/getter 方法")])])]),t._v(" "),s("p",[t._v("此外，如果我们再最新的代码中声明一个成员变量，如下代码所示，那么我们只是声明了一个成员变量，并没有 setter/getter 方法。所以访问成员变量时，可以直接访问 name，也可以像 C++一样用 self->name 来访问，但绝对不能用 self.name 来访问("),s("strong",[t._v("因为成员变量默认不存在 getter 和 setter 方法")]),t._v(")。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("@interface MyViewController :UIViewController\n{\n    NSString *name;\n}\n@end\n\n")])])]),s("p",[s("strong",[t._v("@synthesize")])]),t._v(" "),s("p",[s("code",[t._v("@synthesize")]),t._v(" 表示如果属性没有手动实现 "),s("code",[t._v("setter")]),t._v(" 和 "),s("code",[t._v("getter")]),t._v(" 方法，编译器会自动加上这两个方法;")]),t._v(" "),s("p",[s("strong",[t._v("使用场景")])]),t._v(" "),s("ol",[s("li",[s("p",[t._v("如果你已经手动实现了 "),s("code",[t._v("setter／getter")]),t._v(" 方法，或着对 只读对象 实现了 "),s("code",[t._v("getter")]),t._v(" 方法，那么自动合成不会产生任何影响。如果你在手动实现需要一个变量，只需声明它就可以了，不需要添加"),s("code",[t._v("@synthesize")]),t._v(" 来添加一个别名（尽管可以）。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("当在 "),s("code",[t._v("protocol")]),t._v(" 中声明并实现属性时。协议中声明的属性不会自动生成 setter 和 getter，"),s("code",[t._v("[UIApplicationDelegate window]")]),t._v(" 就是个典型的例子;")])])]),t._v(" "),s("li",[s("p",[t._v("给变量设置别名: 例如我可以这样写@synthesize age = myAge;，那这样子的话我们去调用的时候 self.age 其实是操作的实例变量 myAge,而不是_age 了。"),s("strong",[t._v("此时使用自动生成的实例变量名将报错，只能使用指定的别名")])])])]),t._v(" "),s("p",[s("strong",[t._v("@dynamic")])]),t._v(" "),s("p",[t._v("@dynamic 告诉编译器：属性的 setter 与 getter 方法由用户自己实现，不自动生成。假如一个属性被声明为 @dynamic var，而且你没有提供 @setter 方法和 @getter 方法，编译的时候没问题，但是当程序运行到 instance.var = someVar，由于缺 setter 方法会导致程序崩溃；或者当运行到 someVar = var 时，由于缺 getter 方法同样会导致崩溃。编译时没问题，运行时才执行相应的方法，这就是所谓的动态绑定。")]),t._v(" "),s("h2",{attrs:{id:"属性引用-self-xx-与-xx-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#属性引用-self-xx-与-xx-的区别","aria-hidden":"true"}},[t._v("#")]),t._v(" 属性引用 self.xx 与_xx 的区别")]),t._v(" "),s("p",[t._v("本质上： "),s("strong",[t._v("self.xx 是调用的 xx 属性的 get/set 方法，而_xx 则只是使用成员变量_xx，并不会调用 get/set 方法")])]),t._v(" "),s("blockquote",[s("p",[t._v("两者的更深层次的区别在于，通过存取方法访问比直接访问多做了一些其他的事情（例如内存管理，复制值等），例如如果属性在@property 中属性的修饰符有 retain，那么当使用 self.xx 的时候相应的属性的引用计数器由于生成了 setter 方法而进行加 1 操作，此时的 retaincount 为 2。")])]),t._v(" "),s("p",[s("strong",[t._v("比较出错的点: 最容易出问题的地方就是对属性 xx 或成员变量_xx 的初始化的地方和调用时机")])]),t._v(" "),s("p",[s("strong",[t._v("例子 1")])]),t._v(" "),s("blockquote",[s("p",[t._v("做懒加载的时候,我们将属性和实例变量的初始化放在重写的 get 方法中，于是我们在 "),s("code",[t._v("- (void)viewDidLoad")]),t._v(" 中使用"),s("code",[t._v("\\_invoiceInfoImageView")]),t._v(" 来进行布局时，实际上因为在这之前也没有调用 "),s("code",[t._v("invoiceInfoImageView")]),t._v(" 的 get 方法，所以此时 "),s("code",[t._v("invoiceInfoImageView")]),t._v(" 的值其实为 nil，界面上是空白的。")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("#"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"InvoiceTitleInfoViewController.h"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InvoiceTitleInfoViewController")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//定义属性invoiceInfoImageView")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@property")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("strong"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" nonatomic"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UIImageView")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("invoiceInfoImageView"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@end")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@implementation")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InvoiceTitleInfoViewController")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("viewDidLoad "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),t._v(" viewDidLoad"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("title "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" @"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"发票抬头"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//用_xx来调用实例变量_invoiceInfoImageView,此时由于没有调用get方法进行初始化，因此此时_invoiceInfoImageView的值为nil")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("view addSubview"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("_invoiceInfoImageView"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    WEAKSELF\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("_invoiceInfoImageView mas_makeConstraints"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MASConstraintMaker")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("make"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        make"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("top"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mas_equalTo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("weakSelf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("view"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mas_offset")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        make"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("left"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mas_equalTo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("weakSelf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("view"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mas_offset")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("15.0f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        make"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("right"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bottom"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mas_equalTo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("weakSelf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("view"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mas_offset")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("15.0f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//初始化属性invoiceInfoImageView，其实这就是invoiceInfoImageView的get方法")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UIImageView")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("invoiceInfoImageView"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("_invoiceInfoImageView"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        _invoiceInfoImageView "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UIImageView")]),t._v(" alloc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" init"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        _invoiceInfoImageView"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("image "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UIImage")]),t._v(" imageNamed"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"invoice_title_info"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" _invoiceInfoImageView"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("strong",[t._v("例子 2")])]),t._v(" "),s("blockquote",[s("p",[t._v("如果我们在 使用 "),s("code",[t._v("self.xx")]),t._v(" 来调用变量，则会调用 "),s("code",[t._v("invoiceInfoImageView")]),t._v(" 的 get 方法，进行初始化，界面布局将会显示我们想要的图片。"),s("strong",[t._v("此外，如果我们再使用"),s("code",[t._v("\\_xx")]),t._v(" 之前用 "),s("code",[t._v("self.xx")]),t._v("调用过变量 "),s("code",[t._v("invoiceInfoImageView")]),t._v("，则同样会调用其 get 方法从而触发 "),s("code",[t._v("invoiceInfoImageView")]),t._v(" 的初始化，这样也不会影响布局")])])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("viewDidLoad "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),t._v(" viewDidLoad"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("title "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" @"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"发票抬头"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//先用self.invoiceInfoImageView触发get方法进行初始化，这样_invoiceInfoImageView的值被初始化后不为nil")]),t._v("\n    self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("invoiceInfoImageView"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("view addSubview"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("_invoiceInfoImageView"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    WEAKSELF\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("_invoiceInfoImageView mas_makeConstraints"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MASConstraintMaker")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("make"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        make"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("top"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mas_equalTo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("weakSelf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("view"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mas_offset")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        make"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("left"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mas_equalTo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("weakSelf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("view"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mas_offset")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("15.0f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        make"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("right"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bottom"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mas_equalTo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("weakSelf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("view"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mas_offset")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("15.0f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("strong",[t._v("同时手动重写了一个属性的get和set方法的话，Xcode不会再自动生成带有下划线的私有成员变量了")])]),t._v(" "),s("h2",{attrs:{id:"oc-中-覆盖父类属性会有-auto-property-synthesis-will-not-synthesize-property-xxx-的警告"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#oc-中-覆盖父类属性会有-auto-property-synthesis-will-not-synthesize-property-xxx-的警告","aria-hidden":"true"}},[t._v("#")]),t._v(" OC 中 覆盖父类属性会有 Auto property synthesis will not synthesize property 'xxx'的警告")]),t._v(" "),s("p",[s("strong",[t._v("根本原因，protocal 中声明的熟悉，默认不自动生成 getter 和 setter，需要使用 @synthesize var = _var 声明属性，以保证存在 getter 和 setter")])]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.jianshu.com/p/6db51a02563f",target:"_blank",rel:"noopener noreferrer"}},[t._v("情景还原"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"参考"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考","aria-hidden":"true"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.cnblogs.com/mukekeheart/p/8251366.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("OS 学习——属性引用 self.xx 与_xx 的区别"),s("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=e.exports}}]);