(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{587:function(t,a,r){"use strict";r.r(a);var v=r(12),s=Object(v.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h4",{attrs:{id:"javascript-面向对象的理解和感悟"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#javascript-面向对象的理解和感悟"}},[t._v("#")]),t._v(" JavaScript 面向对象的理解和感悟")]),t._v(" "),r("p",[r("strong",[t._v("什么是面向对象？")])]),t._v(" "),r("blockquote",[r("p",[t._v("其实对象就是一个整体，对外提供一些功能和操作，而你不知道它内部是怎么操作的。程序中的面向对象是对现实生活的一种抽象。")])]),t._v(" "),r("p",[r("strong",[t._v("面向对象的特点")])]),t._v(" "),r("p",[t._v("1、抽象：抽指把核心的东西抽出来，把与我们要解决的问题有关的东西拿出来摆在面前")]),t._v(" "),r("p",[t._v("2、封装：让使用对象的人不考虑内部实现，只考虑功能使用  把内部的代码保护起来，只留出一些个api接口供用户使用")]),t._v(" "),r("p",[t._v("3、继承：就是为了代码的复用，从父类上继承出一些方法和属性，子类也有自己的一些属性")]),t._v(" "),r("p",[t._v("4、多态：实际上是不同对象作用与同一操作产生不同的效果。多态的思想实际上是把“想做什么”和“谁去做“分开。")]),t._v(" "),r("p",[r("strong",[t._v("继承的几种方式？")])]),t._v(" "),r("ul",[r("li",[t._v("类式继承")]),t._v(" "),r("li",[t._v("构造函数继承")]),t._v(" "),r("li",[t._v("组合继承")]),t._v(" "),r("li",[t._v("寄生式组合继承")]),t._v(" "),r("li",[t._v("extends继承")])]),t._v(" "),r("h4",{attrs:{id:"javascript的模块化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#javascript的模块化"}},[t._v("#")]),t._v(" JavaScript的模块化")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://mrgaogang.github.io/article/javascript/Javascript%E6%A8%A1%E5%9D%97%E5%8C%96%E5%8F%91%E5%B1%95AMD,CMD,CommonJS,UMD,ES6.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("CommonJS,AMD,CMD,UMD,modules"),r("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=s.exports}}]);