(window.webpackJsonp=window.webpackJsonp||[]).push([[77],{701:function(t,a,v){"use strict";v.r(a);var s=v(18),_=Object(s.a)({},(function(){var t=this,a=t.$createElement,v=t._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"时序图详解及在mvc中的应用"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#时序图详解及在mvc中的应用"}},[t._v("#")]),t._v(" 时序图详解及在MVC中的应用")]),t._v(" "),v("h2",{attrs:{id:"一、什么是时序图"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#一、什么是时序图"}},[t._v("#")]),t._v(" 一、什么是时序图")]),t._v(" "),v("p",[t._v("时序图(Sequence Diagram)，又名序列图、循序图，是一种 UML 交互图。它通过描述对象之间发送消息的时间顺序显示多个对象之间的动态协作。序列图显示元素随着时间的推移而相互作用，"),v("strong",[t._v("它们根据对象（水平）和时间（垂直）组织")]),t._v(";")]),t._v(" "),v("h3",{attrs:{id:"对象维度"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#对象维度"}},[t._v("#")]),t._v(" 对象维度")]),t._v(" "),v("ul",[v("li",[t._v("横轴表示交互中涉及的元素")]),t._v(" "),v("li",[t._v("传统上，操作中涉及的对象根据它们何时参与消息序列从左到右列出。 但是，横轴上的元素可以按任何顺序出现")])]),t._v(" "),v("h3",{attrs:{id:"时间维度"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#时间维度"}},[t._v("#")]),t._v(" 时间维度")]),t._v(" "),v("p",[t._v("纵轴表示页面下的时间进程（或进展）。")]),t._v(" "),v("blockquote",[v("p",[t._v("注意：序列图中的时间都是关于排序的，而不是持续时间。 交互图中的垂直空间与交互持续时间无关。")])]),t._v(" "),v("h2",{attrs:{id:"二、使用场景"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#二、使用场景"}},[t._v("#")]),t._v(" 二、使用场景")]),t._v(" "),v("p",[t._v("时序图的使用场景非常广泛，几乎各行各业都可以使用。当然，作为一个软件工作者，我这边主要列举和软件开发有关的场景。")]),t._v(" "),v("p",[v("strong",[t._v("1.梳理业务流程")])]),t._v(" "),v("p",[t._v("一般的软件开发都是为了支撑某个具体的业务。有时候业务的流程会比较复杂，涉及到多种角色，这时就可以使用时序图来梳理这个业务逻辑。这样会使业务看起来非常清晰，代码写起来也是水到渠成的事情了。")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://cdn-1252273386.cos.ap-guangzhou.myqcloud.com/images/29207e129252a1410495f3b3882d1986.png",alt:""}})]),t._v(" "),v("p",[v("strong",[t._v("2.梳理开源软件")])]),t._v(" "),v("p",[t._v("作为一个合格的程序员，阅读源代码的能力一定要过关。一般成熟框架的源代码调用深度都比较深，类之间的调用关系也比较复杂。我喜欢用时序图来梳理框架中这些对象之间的关系。比如再看 Tomcat 启动流程的过程中，我就时序图梳理了各个组件之间的关系，看起来层次非常清楚，也便于记忆。")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://cdn-1252273386.cos.ap-guangzhou.myqcloud.com/images/3f1e1c9c34713ee4952ddc4fd840cea3.png",alt:""}})]),t._v(" "),v("h2",{attrs:{id:"三、时序图的角色"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#三、时序图的角色"}},[t._v("#")]),t._v(" 三、时序图的角色")]),t._v(" "),v("p",[t._v("我们在画时序图时会涉及下面 10 种元素：")]),t._v(" "),v("ul",[v("li",[t._v("角色(Actor)")]),t._v(" "),v("li",[t._v("对象(Object)")]),t._v(" "),v("li",[t._v("生命线(LifeLine)")]),t._v(" "),v("li",[t._v("控制焦点(Activation)")]),t._v(" "),v("li",[t._v("消息(Message)")]),t._v(" "),v("li",[t._v("自关联消息(Self-Message)")]),t._v(" "),v("li",[t._v("组合片段(Combined Fragments / Fragment)")])]),t._v(" "),v("p",[t._v("UML 在 MVC 设计模式中的应用：")]),t._v(" "),v("ul",[v("li",[t._v("边界(Boundary)")]),t._v(" "),v("li",[t._v("控制(Control)")]),t._v(" "),v("li",[t._v("实体(Entity)")])]),t._v(" "),v("p",[t._v("其中前 6 种是比较常用和重要的元素，最后的组合片段元素不是很常用，但是比较复杂。我们先介绍前 6 种元素，再单独介绍组合片段元素、边界、控制、实体。")]),t._v(" "),v("h3",{attrs:{id:"_1-角色-actor"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-角色-actor"}},[t._v("#")]),t._v(" "),v("strong",[t._v("1.角色(Actor)")])]),t._v(" "),v("p",[t._v("系统角色，可以是人或者其他系统和子系统。以一个小人图标表示。")]),t._v(" "),v("h3",{attrs:{id:"_2-对象-object"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-对象-object"}},[t._v("#")]),t._v(" "),v("strong",[t._v("2.对象(Object)")]),v("img",{attrs:{src:"https://cdn-1252273386.cos.ap-guangzhou.myqcloud.com/images/0b139eab597f612c61cc6aef64e02aac.png",alt:""}})]),t._v(" "),v("p",[t._v("对象位于时序图的顶部,以一个矩形表示。对象的命名方式一般有三种：")]),t._v(" "),v("ol",[v("li",[v("strong",[t._v("对象")])])]),t._v(" "),v("ul",[v("li",[v("p",[v("strong",[t._v("对象名和类名")]),t._v("。例如：华为手机:手机、loginServiceObject:LoginService；\n"),v("img",{attrs:{src:"https://cdn-1252273386.cos.ap-guangzhou.myqcloud.com/images/17866dd3f7de78245e01be6444d64274.png",alt:""}})])]),t._v(" "),v("li",[v("p",[v("strong",[t._v("只显示类名，不显示对象")]),t._v("，即为一个匿名类。例如：:手机、:LoginSservice。\n"),v("img",{attrs:{src:"https://cdn-1252273386.cos.ap-guangzhou.myqcloud.com/images/61ab97c2a91e5f410d8d853d4b5c2e3d.png",alt:""}})])]),t._v(" "),v("li",[v("p",[v("strong",[t._v("只显示对象名，不显示类名")]),t._v("。例如：华为手机:、loginServiceObject:。\n"),v("img",{attrs:{src:"https://cdn-1252273386.cos.ap-guangzhou.myqcloud.com/images/5708784b3cce7dc30eb2d75713453264.png",alt:""}})])])]),t._v(" "),v("p",[t._v("2。 "),v("strong",[t._v("创建对象")]),t._v("： 创发送者发送一个实例化消息后触发的操作。用执行消息的箭头标识，指向被创建对象的表示框\n"),v("img",{attrs:{src:"https://cdn-1252273386.cos.ap-guangzhou.myqcloud.com/images/468624d5c6a75e4e2df9f1e1b6475f9b.png",alt:""}})]),t._v(" "),v("ol",{attrs:{start:"3"}},[v("li",[v("strong",[t._v("销毁对象")]),t._v("：将对象销毁并回收其拥有的资源。在对象生命线上用 X 标识\n"),v("img",{attrs:{src:"https://cdn-1252273386.cos.ap-guangzhou.myqcloud.com/images/1e8dfd1ca770f27a978e30ca694441c2.png",alt:""}})])]),t._v(" "),v("h3",{attrs:{id:"_3-生命线-lifeline"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-生命线-lifeline"}},[t._v("#")]),t._v(" "),v("strong",[t._v("3.生命线(LifeLine)")])]),t._v(" "),v("p",[t._v("时序图中每个对象和底部中心都有一条垂直的虚线，这就是对象的生命线(对象的时间线)。以一条垂直的虚线表。\n"),v("img",{attrs:{src:"https://cdn-1252273386.cos.ap-guangzhou.myqcloud.com/images/0db0c9030c5663e72c8aead0f7ee0c81.png",alt:""}})]),t._v(" "),v("h3",{attrs:{id:"_4-控制焦点-focus-of-control"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4-控制焦点-focus-of-control"}},[t._v("#")]),t._v(" "),v("strong",[t._v("4.控制焦点(Focus of Control)")])]),t._v(" "),v("p",[t._v("控制焦点又称激活，是覆盖在生命线上一段细长的矩形，表示在这个时间段内，对象或角色正处于活动状态；这有点类似于 java 语言里的大括号"),v("code",[t._v("{}")]),t._v("——作用域。")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://cdn-1252273386.cos.ap-guangzhou.myqcloud.com/images/0967983e517b8811922eca8c1e496867.png",alt:""}})]),t._v(" "),v("h3",{attrs:{id:"_5-消息-message"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5-消息-message"}},[t._v("#")]),t._v(" "),v("strong",[t._v("5.消息(Message)")])]),t._v(" "),v("p",[t._v("表示对象之间发送的信息。消息分为三种类型。")]),t._v(" "),v("ul",[v("li",[v("p",[v("strong",[t._v("同步消息")]),t._v("(Synchronous Message)\n消息的发送者把控制传递给消息的接收者，然后停止活动，等待消息的接收者放弃或者返回控制。用来表示同步的意义。以"),v("strong",[t._v("一条实线和实心箭头表示")]),t._v("。\n"),v("img",{attrs:{src:"https://cdn-1252273386.cos.ap-guangzhou.myqcloud.com/images/cd91e169545131373be57d044daf6ae7.png",alt:""}})])]),t._v(" "),v("li",[v("p",[v("strong",[t._v("异步消息")]),t._v("(Asynchronous Message)")]),t._v(" "),v("p",[t._v("消息发送者通过消息把信号传递给消息的接收者，然后继续自己的活动，不等待接受者返回消息或者控制。异步消息的接收者和发送者是并发工作的。以"),v("strong",[t._v("一条实线和大于号表示")]),t._v("。\n"),v("img",{attrs:{src:"https://cdn-1252273386.cos.ap-guangzhou.myqcloud.com/images/5661ff708f29501078e3a731df45e831.png",alt:""}})])]),t._v(" "),v("li",[v("p",[v("strong",[t._v("返回消息")]),t._v("(Return Message)\n返回消息表示从过程调用返回。以"),v("strong",[t._v("小于号和虚线表示")]),t._v("。\n"),v("img",{attrs:{src:"https://cdn-1252273386.cos.ap-guangzhou.myqcloud.com/images/955e0272340523bd3a3b1fcd6f43b35d.png",alt:""}})])])]),t._v(" "),v("h3",{attrs:{id:"_6-自关联消息"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_6-自关联消息"}},[t._v("#")]),t._v(" "),v("strong",[t._v("6.自关联消息")])]),t._v(" "),v("p",[t._v("表示方法的自身调用或者一个对象内的一个方法调用另外一个方法。以一个半闭合的长方形+下方实心剪头表示。")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://cdn-1252273386.cos.ap-guangzhou.myqcloud.com/images/63fc6844771c78257cf271bedd9bf6a1.png",alt:""}}),t._v("\n下面举例一个时序图的列子，看下上面几种元素具体的使用方式。")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://cdn-1252273386.cos.ap-guangzhou.myqcloud.com/images/315003c10d026167d0767710841a7963.png",alt:""}})]),t._v(" "),v("h3",{attrs:{id:"_7-组合片段"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_7-组合片段"}},[t._v("#")]),t._v(" "),v("strong",[t._v("7.组合片段")])]),t._v(" "),v("p",[t._v("组合片段用来解决交互执行的条件和方式，它允许在序列图中直接表示逻辑组件，用于通过指定条件或子进程的应用区域，为任何生命线的任何部分定义特殊条件和子进程。组合片段共有 13 种，名称及含义如下：")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("组合名称")]),t._v(" "),v("th",[t._v("组合含义")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("ref")]),t._v(" "),v("td",[t._v("引用其他地方定义的组合片段")])]),t._v(" "),v("tr",[v("td",[t._v("alt")]),t._v(" "),v("td",[t._v("在一组行为中根据特定的"),v("strong",[t._v("条件选择")]),t._v("某个交互 "),v("code",[t._v("与if…then…else…对应")])])]),t._v(" "),v("tr",[v("td",[t._v("opt")]),t._v(" "),v("td",[t._v("表示一个"),v("strong",[t._v("可选")]),t._v("的行 为 "),v("code",[t._v("与switch对应")])])]),t._v(" "),v("tr",[v("td",[t._v("break")]),t._v(" "),v("td",[t._v("提供了和编程语言中的 break 类拟的机制")])]),t._v(" "),v("tr",[v("td",[t._v("par")]),t._v(" "),v("td",[t._v("支持交互片段的"),v("strong",[t._v("并发执行")])])]),t._v(" "),v("tr",[v("td",[t._v("seq")]),t._v(" "),v("td",[t._v("强迫交互按照特定的顺序执行")])]),t._v(" "),v("tr",[v("td",[t._v("strict")]),t._v(" "),v("td",[t._v("明确定义了一组交互片段的执行顺序")])]),t._v(" "),v("tr",[v("td",[t._v("neg")]),t._v(" "),v("td",[t._v("用来标志不应该发生的交互")])]),t._v(" "),v("tr",[v("td",[t._v("region")]),t._v(" "),v("td",[t._v("标志在组合片段中先于其他交互片断发生的交互")])]),t._v(" "),v("tr",[v("td",[t._v("ignore")]),t._v(" "),v("td",[t._v("明确定义了交互片段不应该响应的消息")])]),t._v(" "),v("tr",[v("td",[t._v("consider")]),t._v(" "),v("td",[t._v("明确标志了应该被处理的消息")])]),t._v(" "),v("tr",[v("td",[t._v("assert")]),t._v(" "),v("td",[t._v("标志了在交互片段中作为事件唯一的合法继续者的操作数")])]),t._v(" "),v("tr",[v("td",[t._v("loop")]),t._v(" "),v("td",[t._v("说明交互片段会被"),v("strong",[t._v("重复执行")])])])])]),t._v(" "),v("h4",{attrs:{id:"alt-样例"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#alt-样例"}},[t._v("#")]),t._v(" "),v("strong",[t._v("alt 样例")])]),t._v(" "),v("h4",{attrs:{id:"loop"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#loop"}},[t._v("#")]),t._v(" "),v("strong",[t._v("loop")]),v("img",{attrs:{src:"https://cdn-1252273386.cos.ap-guangzhou.myqcloud.com/images/af2438ddcabd57da4a9effb4a44c6ff0.png",alt:""}})]),t._v(" "),v("p",[t._v("片段重复一定次数，可以在临界中指示片段重复的条件。Loop 相当于 for 语句。")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://cdn-1252273386.cos.ap-guangzhou.myqcloud.com/images/c162b4b598268a4145b945dca5af7430.png",alt:""}})]),t._v(" "),v("h4",{attrs:{id:"par"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#par"}},[t._v("#")]),t._v(" "),v("strong",[t._v("par")])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://cdn-1252273386.cos.ap-guangzhou.myqcloud.com/images/63fb7a6e70bd78a62772e8d3a1b04f52.png",alt:""}})]),t._v(" "),v("blockquote",[v("p",[t._v("hungryPerson 传递 cookFood 消息给 oven 对象。当 oven 对象接收那个消息时，它同时发送两个消息（nukeFood 和 rotateFood）给它本身。这些消息都处理后，hungryPerson 对象从 oven 对象返回 yummyFood 。")])]),t._v(" "),v("h2",{attrs:{id:"四、使用-uml-建模的-mvc-框架"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#四、使用-uml-建模的-mvc-框架"}},[t._v("#")]),t._v(" 四、使用 UML 建模的 MVC 框架")]),t._v(" "),v("p",[t._v("MVC: 设计模式")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://cdn-1252273386.cos.ap-guangzhou.myqcloud.com/images/a702f5ef46e8fe56878c859878bb9571.png",alt:""}})]),t._v(" "),v("p",[t._v("这个模型-视图-控制器可以使用刻板的 UML 表示法中的**鲁棒性(鲁棒性亦称健壮性、稳健性、强健性，是系统的健壮性)**分析来最好地进行可视化描述，这是由 Ivar Jacobson 在他的获奖著作 Object-Oriented Software Engineering 中首次提出的（参见下面的参考资料），并由 Doug Rosenberg 等人进一步解释.  在他的用例驱动的 UML 对象建模一书中。")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://cdn-1252273386.cos.ap-guangzhou.myqcloud.com/images/5c86dd33f6b136293b6f644b31c3825b.png",alt:""}})]),t._v(" "),v("p",[t._v("这是一个简单的、假设的 MVC 序列图。您在上图中看到的是，Web 用户启动查询并生成事件，该事件由控制器处理以从模型中获取所需信息、验证信息并将结果集传递回视图。")]),t._v(" "),v("h3",{attrs:{id:"_1-uml-实体-mvc-中-的-m"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-uml-实体-mvc-中-的-m"}},[t._v("#")]),t._v(" 1. UML 实体(MVC 中 的 M)")]),t._v(" "),v("blockquote",[v("p",[t._v("实体（模型）只不过是您的边界对象正在寻找的信息或数据。这些可能是数据库表、Excel 文件或“临时”会话或缓存数据或类似的东西")])]),t._v(" "),v("ul",[v("li",[t._v("描述随着时间的推移而存在并且主要关注持久状态的对象。")]),t._v(" "),v("li",[t._v("通常来自域模型的对象")]),t._v(" "),v("li",[t._v("我们需要跟踪和存储的东西")])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://cdn-1252273386.cos.ap-guangzhou.myqcloud.com/images/1a56813126dbe1820dcbf59b4d1c0379.png",alt:""}})]),t._v(" "),v("h3",{attrs:{id:"_2-uml-边界-mvc-中-的-v"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-uml-边界-mvc-中-的-v"}},[t._v("#")]),t._v(" 2. UML 边界(MVC 中 的 V)")]),t._v(" "),v("blockquote",[v("p",[t._v("捕捉用户交互、屏幕流和元素交互; 是参与者（例如，用户）在您的软件系统中与之通信的对象。这些对象可以是系统中的任何窗口、屏幕、对话框和菜单或其他用户界面。您可以在分析用例时轻松识别它们。")])]),t._v(" "),v("ul",[v("li",[t._v("描述系统和通信环境之间的连接。")]),t._v(" "),v("li",[t._v("参与者在与系统通信时使用")]),t._v(" "),v("li",[t._v("只有实体对象可以发起事件\n（通常是主要的用户界面元素，例如屏幕）")])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://cdn-1252273386.cos.ap-guangzhou.myqcloud.com/images/2919d3ca4cefc8959d7d058ec0daab9c.png",alt:""}})]),t._v(" "),v("h3",{attrs:{id:"_3-uml-控制-mvc-中-的-c"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-uml-控制-mvc-中-的-c"}},[t._v("#")]),t._v(" 3. UML 控制(MVC 中 的 C)")]),t._v(" "),v("blockquote",[v("p",[t._v("控制器）是业务对象或您的业务 Web 服务。这是您捕获用于过滤出要呈现给用户的数据的业务规则的地方，他要求什么。所以控制器实际上是在控制业务逻辑和数据转换。")])]),t._v(" "),v("ul",[v("li",[t._v("描述特定用例中的行为。")]),t._v(" "),v("li",[t._v("边界对象和实体对象之间的“粘合剂”")]),t._v(" "),v("li",[t._v("捕获业务规则和策略\n（注意：通常作为其他对象的方法实现）")])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://cdn-1252273386.cos.ap-guangzhou.myqcloud.com/images/baf526449e560ac90cd3710d7a991235.png",alt:""}})]),t._v(" "),v("h3",{attrs:{id:"_4-mvc-模型中的连接规则"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4-mvc-模型中的连接规则"}},[t._v("#")]),t._v(" 4. MVC 模型中的连接规则")]),t._v(" "),v("p",[t._v("考虑边界对象(Boundary)和实体(Entity)对象是名词，而控制器(Controller)是动词。")]),t._v(" "),v("blockquote",[v("p",[v("strong",[t._v("边界对象和实体对象都是名词，而控制器是动词。名词不能与其他名词对话，但动词可以与名词或动词对话")]),t._v("。")]),t._v(" "),v("p",[t._v("以下是连接的四个基本规则。")])]),t._v(" "),v("ul",[v("li",[t._v("Actor 只能与边界对象交互或通信。 (用户<=>Boundary)")]),t._v(" "),v("li",[t._v("边界对象只能与控制器和参与者通信。(Boundary<=>Controller)")]),t._v(" "),v("li",[t._v("实体对象只能与控制器交互。(Entity<=>Controller)")]),t._v(" "),v("li",[t._v("控制器可以与边界对象和实体对象以及其他控制器进行通信，但不能与参与者通信")])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://cdn-1252273386.cos.ap-guangzhou.myqcloud.com/images/711308cdaf98dc79ed259f3573e51f69.png",alt:""}})]),t._v(" "),v("h3",{attrs:{id:"使用-mvc-序列图开发用例场景"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#使用-mvc-序列图开发用例场景"}},[t._v("#")]),t._v(" 使用 MVC 序列图开发用例场景")]),t._v(" "),v("p",[t._v("我们可以通过使用一组 MVC 格式的相关序列图来开发用例场景（正常或替代）。同样，MVC"),v("a",{attrs:{href:"https://www.visual-paradigm.com/guide/uml-unified-modeling-language/what-is-sequence-diagram/",target:"_blank",rel:"noopener noreferrer"}},[t._v("序列图"),v("OutboundLink")],1),t._v("有接口对象、控制器对象和实体对象：")]),t._v(" "),v("ul",[v("li",[t._v("实体是表示系统数据的对象：客户、产品、交易、购物车等。")]),t._v(" "),v("li",[t._v("边界是与系统参与者交互的对象：UserInterface、DataBaseGateway、ServerProxy 等。")]),t._v(" "),v("li",[t._v("控件是介于边界和实体之间的对象。")])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://cdn-1252273386.cos.ap-guangzhou.myqcloud.com/images/4eb7fb4fedd9cf2714b05b01ee7ef7e3.png",alt:""}})]),t._v(" "),v("p",[t._v("它们通过边界对象与实体交互来协调来自边界的命令的执行。控制器对象通常对应于用例场景，并且通常由序列图表示。")]),t._v(" "),v("p",[t._v("您可以在 MVC 序列图中为生命线使用构造型，以直观地清楚您在 MVC 中使用的对象类型，就像上面的鲁棒性分析图一样。")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://cdn-1252273386.cos.ap-guangzhou.myqcloud.com/images/5805894b338fc1b31cb7fdaee8481998.png",alt:""}})]),t._v(" "),v("h3",{attrs:{id:"对象-和-实体-边界-控制-有什么关系"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#对象-和-实体-边界-控制-有什么关系"}},[t._v("#")]),t._v(" 对象 和 实体/边界/控制 有什么关系")]),t._v(" "),v("p",[t._v("实体，边界，控制更像是对象的上一层抽象，但是最终应用都会应用在对象上。比如在 java 中使用 MVC 设计模式，其中的 M,V,C 最终都会使用到 java 的 calss 去实现。")]),t._v(" "),v("p",[t._v("举个例子:")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://cdn-1252273386.cos.ap-guangzhou.myqcloud.com/images/ee5c0ed95d53bb0fe778c3d0997bd2e6.png",alt:""}})]),t._v(" "),v("h2",{attrs:{id:"五、draw-io-提供的图形介绍"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#五、draw-io-提供的图形介绍"}},[t._v("#")]),t._v(" 五、draw.io 提供的图形介绍")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://cdn-1252273386.cos.ap-guangzhou.myqcloud.com/images/b38ed2f6de10a9421dd2943dbf867175.png",alt:""}})]),t._v(" "),v("h2",{attrs:{id:"六、参考"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#六、参考"}},[t._v("#")]),t._v(" 六、参考")]),t._v(" "),v("ul",[v("li",[v("p",[v("a",{attrs:{href:"http://www.uml.org.cn/oobject/201909232.asp",target:"_blank",rel:"noopener noreferrer"}},[t._v("UML 序列图详解"),v("OutboundLink")],1)])]),t._v(" "),v("li",[v("p",[v("a",{attrs:{href:"https://www.cnblogs.com/54chensongxia/p/13236965.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("时序图"),v("OutboundLink")],1)])]),t._v(" "),v("li",[v("p",[v("a",{attrs:{href:"https://www.cybermedian.com/cn/what-is-model-view-controller-mvc-framework-model-mvc-with-uml-robustness-analysis/",target:"_blank",rel:"noopener noreferrer"}},[t._v("什么是模型-视图-控制器 (MVC) 框架？使用 UML 鲁棒性分析模型 MVC"),v("OutboundLink")],1)])])])])}),[],!1,null,null,null);a.default=_.exports}}]);