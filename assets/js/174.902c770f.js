(window.webpackJsonp=window.webpackJsonp||[]).push([[174],{827:function(t,_,a){"use strict";a.r(_);var e=a(18),v=Object(e.a)({},(function(){var t=this,_=t.$createElement,a=t._self._c||_;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"mysql索引及查询优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql索引及查询优化"}},[t._v("#")]),t._v(" mysql索引及查询优化")]),t._v(" "),a("p",[t._v("声明: 文章转载自:"),a("a",{attrs:{href:"https://juejin.cn/post/6844903818056974350#heading-22",target:"_blank",rel:"noopener noreferrer"}},[t._v("MySQL索引与查询优化"),a("OutboundLink")],1)]),t._v(" "),a("h1",{attrs:{id:"about-mysql"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#about-mysql"}},[t._v("#")]),t._v(" About MySQL")]),t._v(" "),a("p",[t._v("MySQL（读作/maɪ ˈsiːkwəl/“My Sequel”）是一个开放源码的关系数据库管理系统，原开发者为瑞典的MySQL AB公司，目前为Oracle旗下产品。")]),t._v(" "),a("p",[t._v("被甲骨文公司收购后，自由软件社群们对于Oracle是否还会持续支持MySQL社群版（MySQL之中唯一的免费版本）有所隐忧，因此MySQL的创始人麦克尔·维德纽斯以MySQL为基础，成立分支计划MariaDB。原先一些使用MySQL的开源软件，部分转向了MariaDB或其它的数据库。")]),t._v(" "),a("p",[t._v("不可否认的是，MySQL由于其性能高、成本低、可靠性好，已经成为最流行的开源数据库之一，随着MySQL的不断成熟，它也逐渐用于更多大规模网站和应用，非常流行的开源软件组合LAMP中的“M”指的就是MySQL。")]),t._v(" "),a("h1",{attrs:{id:"why-mysql"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#why-mysql"}},[t._v("#")]),t._v(" Why MySQL")]),t._v(" "),a("p",[t._v("在众多开源免费的关系型数据库系统中，MySQL有以下比较出众的优势：")]),t._v(" "),a("ol",[a("li",[t._v("运行速度快")]),t._v(" "),a("li",[t._v("易使用")]),t._v(" "),a("li",[t._v("SQL语言支持")]),t._v(" "),a("li",[t._v("移植性好")]),t._v(" "),a("li",[t._v("功能丰富")]),t._v(" "),a("li",[t._v("成本低廉")])]),t._v(" "),a("p",[t._v("对于其中运行速度，根据官方介绍，"),a("strong",[t._v("MySQL 8.0")]),t._v(" 比之前广泛使用的版本 "),a("strong",[t._v("MySQL 5.7")]),t._v(" 有了两倍的提升。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/4/13/16a16ce9cdfc2537~tplv-t2oaga2asx-watermark.awebp",alt:""}})]),t._v(" "),a("p",[t._v("在其官方的"),a("a",{attrs:{href:"https://link.juejin.cn?target=https%3A%2F%2Fwww.mysql.com%2Fwhy-mysql%2Fbenchmarks%2F",title:"https://www.mysql.com/why-mysql/benchmarks/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Benchmarks"),a("OutboundLink")],1),t._v("中，只读的性能超过了每秒一百万次：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/4/13/16a16cd863986fb4~tplv-t2oaga2asx-watermark.awebp",alt:""}})]),t._v(" "),a("p",[t._v("读写的性能接近每秒二十五万次：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/4/13/16a16cd88df379ea~tplv-t2oaga2asx-watermark.awebp",alt:""}})]),t._v(" "),a("p",[a("a",{attrs:{href:"https://link.juejin.cn?target=undefined",target:"_blank",rel:"noopener noreferrer"}},[a("OutboundLink")],1)]),t._v(" "),a("h1",{attrs:{id:"mysql-index"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql-index"}},[t._v("#")]),t._v(" MySQL Index")]),t._v(" "),a("h2",{attrs:{id:"why-index"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#why-index"}},[t._v("#")]),t._v(" Why Index")]),t._v(" "),a("p",[t._v("从概念上讲，数据库是数据表的集合，数据表是数据行和数据列的集合。当你执行一个"),a("code",[t._v("SELECT语句")]),t._v("从数据表中查询部分数据行的时候，得到的就是另外一个数据表和数据行的集合。")]),t._v(" "),a("p",[t._v("当然，我们都希望获得这个新的集合的时间尽可能地短，效率尽可能地高，这就是优化查询。")]),t._v(" "),a("p",[t._v("提升查询速度的技术有很多，其中最重要的就是索引。当你发现自己的查询速度慢的时候，最快解决问题的方法就是使用索引。索引的使用是影响查询速度的重要因素。在使用索引之前其他的优化查询的动作纯粹是浪费时间，只有合理地使用索引之后，才有必要考虑其他优化方式。"),a("a",{attrs:{href:"https://link.juejin.cn?target=undefined",target:"_blank",rel:"noopener noreferrer"}},[a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"索引是如何工作的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#索引是如何工作的"}},[t._v("#")]),t._v(" 索引是如何工作的")]),t._v(" "),a("p",[t._v("首先，在你的MySQL上创建"),a("code",[t._v("t_user_action_log")]),t._v(" 表，方便下面进行演示。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("CREATE DATABASE `ijiangtao_local_db_mysql` /*!40100 DEFAULT CHARACTER SET utf8 */;\n\nUSE ijiangtao_local_db_mysql;\n\nDROP TABLE IF EXISTS t_user_action_log;\n\nCREATE TABLE `t_user_action_log` (\n  `id` BIGINT(20) NOT NULL AUTO_INCREMENT COMMENT '主键id',\n  `name` VARCHAR(32) DEFAULT NULL COMMENT '用户名',\n  `ip_address` VARCHAR(50) DEFAULT NULL COMMENT 'IP地址',\n  `action` INT4 DEFAULT NULL COMMENT '操作：1-登录，2-登出，3-购物，4-退货，5-浏览',\n  `create_time` TIMESTAMP COMMENT '创建时间',\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;\n\nINSERT INTO t_user_action_log (name, ip_address, `action`, create_time) values ('LiSi', '8.8.8.2', 1, CURRENT_TIMESTAMP);\nINSERT INTO t_user_action_log (name, ip_address, `action`, create_time) values ('LiSi', '8.8.8.1', 2, CURRENT_TIMESTAMP);\nINSERT INTO t_user_action_log (name, ip_address, `action`, create_time) values ('LiSi', '8.8.8.2', 1, CURRENT_TIMESTAMP);\nINSERT INTO t_user_action_log (name, ip_address, `action`, create_time) values ('LiSi', '8.8.8.3', 1, CURRENT_TIMESTAMP);\nINSERT INTO t_user_action_log (name, ip_address, `action`, create_time) values ('LiSi', '8.8.8.2', 2, CURRENT_TIMESTAMP);\nINSERT INTO t_user_action_log (name, ip_address, `action`, create_time) values ('LiSi', '8.8.8.4', 1, CURRENT_TIMESTAMP);\nINSERT INTO t_user_action_log (name, ip_address, `action`, create_time) values ('LiSi', '8.8.8.2', 2, CURRENT_TIMESTAMP);\nINSERT INTO t_user_action_log (name, ip_address, `action`, create_time) values ('LiSi', '8.8.8.1', 1, CURRENT_TIMESTAMP);\nINSERT INTO t_user_action_log (name, ip_address, `action`, create_time) values ('LiSi', '8.8.8.2', 2, CURRENT_TIMESTAMP);\nINSERT INTO t_user_action_log (name, ip_address, `action`, create_time) values ('LiSi', '8.8.8.2', 1, CURRENT_TIMESTAMP);\nINSERT INTO t_user_action_log (name, ip_address, `action`, create_time) values ('LiSi', '8.8.8.2', 3, CURRENT_TIMESTAMP);\nINSERT INTO t_user_action_log (name, ip_address, `action`, create_time) values ('LiSi', '8.8.8.2', 5, CURRENT_TIMESTAMP);\nINSERT INTO t_user_action_log (name, ip_address, `action`, create_time) values ('LiSi', '8.8.8.2', 2, CURRENT_TIMESTAMP);\nINSERT INTO t_user_action_log (name, ip_address, `action`, create_time) values ('LiSi', '8.8.8.2', 2, CURRENT_TIMESTAMP);\nINSERT INTO t_user_action_log (name, ip_address, `action`, create_time) values ('LiSi', '8.8.8.2', 3, CURRENT_TIMESTAMP);\nINSERT INTO t_user_action_log (name, ip_address, `action`, create_time) values ('LiSi', '8.8.8.2', 3, CURRENT_TIMESTAMP);\nINSERT INTO t_user_action_log (name, ip_address, `action`, create_time) values ('LiSi', '8.8.8.2', 5, CURRENT_TIMESTAMP);\nINSERT INTO t_user_action_log (name, ip_address, `action`, create_time) values ('LiSi', '8.8.8.2', 3, CURRENT_TIMESTAMP);\nINSERT INTO t_user_action_log (name, ip_address, `action`, create_time) values ('LiSi', '8.8.8.2', 3, CURRENT_TIMESTAMP);\nINSERT INTO t_user_action_log (name, ip_address, `action`, create_time) values ('LiSi', '8.8.8.2', 4, CURRENT_TIMESTAMP);\n\n")])])]),a("p",[t._v("假如我们要筛选 "),a("code",[t._v("action")]),t._v("为"),a("code",[t._v("2")]),t._v("的所有记录，SQL如下：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("SELECT id, name, ip_address FROM t_user_action_log WHERE `action`=2;\n\n")])])]),a("p",[t._v("通过查询分析器"),a("code",[t._v("explain")]),t._v("分析这条查询语句：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("EXPLAIN SELECT id, name, ip_address FROM t_user_action_log WHERE `action`=2;\n\n")])])]),a("p",[t._v("分析结果如下：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("id")]),t._v(" "),a("th",[t._v("select_type")]),t._v(" "),a("th",[t._v("table")]),t._v(" "),a("th",[t._v("partitions")]),t._v(" "),a("th",[t._v("type")]),t._v(" "),a("th",[t._v("possible_keys")]),t._v(" "),a("th",[t._v("key")]),t._v(" "),a("th",[t._v("key_len")]),t._v(" "),a("th",[t._v("ref")]),t._v(" "),a("th",[t._v("rows")]),t._v(" "),a("th",[t._v("filtered")]),t._v(" "),a("th",[t._v("Extra")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("1")]),t._v(" "),a("td",[t._v("SIMPLE")]),t._v(" "),a("td",[t._v("t_user_action_log")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("ALL")]),t._v(" "),a("td"),t._v(" "),a("td"),t._v(" "),a("td"),t._v(" "),a("td"),t._v(" "),a("td",[t._v("1")]),t._v(" "),a("td",[t._v("100.00")]),t._v(" "),a("td",[t._v("Using where")])])])]),t._v(" "),a("p",[t._v("其中"),a("code",[t._v("type")]),t._v("为"),a("code",[t._v("ALL")]),t._v("表示要进行全表扫描。这样效率无疑是极慢的。")]),t._v(" "),a("p",[t._v("下面为"),a("code",[t._v("action")]),t._v("列添加索引：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("ALTER TABLE t_user_action_log ADD INDEX (`action`);\n\n")])])]),a("p",[t._v("然后再次执行查询分析，结果如下：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("id")]),t._v(" "),a("th",[t._v("select_type")]),t._v(" "),a("th",[t._v("table")]),t._v(" "),a("th",[t._v("partitions")]),t._v(" "),a("th",[t._v("type")]),t._v(" "),a("th",[t._v("possible_keys")]),t._v(" "),a("th",[t._v("key")]),t._v(" "),a("th",[t._v("key_len")]),t._v(" "),a("th",[t._v("ref")]),t._v(" "),a("th",[t._v("rows")]),t._v(" "),a("th",[t._v("filtered")]),t._v(" "),a("th",[t._v("Extra")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("1")]),t._v(" "),a("td",[t._v("SIMPLE")]),t._v(" "),a("td",[t._v("t_user_action_log")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("ref")]),t._v(" "),a("td",[t._v("action")]),t._v(" "),a("td",[t._v("action")]),t._v(" "),a("td",[t._v("5")]),t._v(" "),a("td",[t._v("const")]),t._v(" "),a("td",[t._v("1")]),t._v(" "),a("td",[t._v("100.00")]),t._v(" "),a("td")])])]),t._v(" "),a("p",[t._v("我们看到这次查询就使用索引了。加索引前"),a("code",[t._v("Extra")]),t._v("的值是Using Where，加索引后"),a("code",[t._v("Extra")]),t._v("的值为空。")]),t._v(" "),a("p",[t._v("那么为什么索引会提高查询速度呢？原因是索引会根据索引值进行分类，这样就不用再进行全表扫描了。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/4/13/16a16cd7df67ed0f~tplv-t2oaga2asx-watermark.awebp",alt:""}})]),t._v(" "),a("p",[t._v("比如上图，"),a("code",[t._v("action")]),t._v("值为"),a("code",[t._v("2")]),t._v("的索引值分类存储在了索引空间，可以快速地查询到索引值所对应的列。"),a("a",{attrs:{href:"https://link.juejin.cn?target=undefined",target:"_blank",rel:"noopener noreferrer"}},[a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"如何使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何使用"}},[t._v("#")]),t._v(" 如何使用")]),t._v(" "),a("p",[t._v("下面介绍一下如何使用SQL创建、查看和删除索引。")]),t._v(" "),a("h3",{attrs:{id:"创建索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建索引"}},[t._v("#")]),t._v(" 创建索引")]),t._v(" "),a("p",[t._v("三种方式：")]),t._v(" "),a("ol",[a("li",[t._v("使用"),a("code",[t._v("CREATE INDEX")]),t._v("创建，语法如下：")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("CREATE INDEX indexName ON tableName (columnName(length));\n\n")])])]),a("p",[t._v("例如我们对"),a("code",[t._v("ip_address")]),t._v("这一列创建一个长度为16的索引：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("CREATE INDEX index_ip_addr ON t_user_action_log (ip_address(16));\n\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("使用"),a("code",[t._v("ALTER")]),t._v("语句创建，语法如下：")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("ALTER TABLE tableName ADD INDEX indexName(columnName);\n\n")])])]),a("p",[a("code",[t._v("ALTER")]),t._v("语句创建索引前面已经有例子了。下面提供一个设置索引长度的例子：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("ALTER TABLE t_user_action_log ADD INDEX ip_address_idx (ip_address(16));\n\nSHOW INDEX FROM t_user_action_log;\n\n")])])]),a("table",[a("thead",[a("tr",[a("th",[t._v("Table")]),t._v(" "),a("th",[t._v("Non_unique")]),t._v(" "),a("th",[t._v("Key_name")]),t._v(" "),a("th",[t._v("Seq_in_index")]),t._v(" "),a("th",[t._v("Column_name")]),t._v(" "),a("th",[t._v("Collation")]),t._v(" "),a("th",[t._v("Cardinality")]),t._v(" "),a("th",[t._v("Sub_part")]),t._v(" "),a("th",[t._v("Packed")]),t._v(" "),a("th",[t._v("Null")]),t._v(" "),a("th",[t._v("Index_type")]),t._v(" "),a("th",[t._v("Comment")]),t._v(" "),a("th",[t._v("Index_comment")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("t_user_action_log")]),t._v(" "),a("td",[t._v("1")]),t._v(" "),a("td",[t._v("ip_address_idx")]),t._v(" "),a("td",[t._v("1")]),t._v(" "),a("td",[t._v("ip_address")]),t._v(" "),a("td",[t._v("A")]),t._v(" "),a("td",[t._v("1")]),t._v(" "),a("td",[t._v("16")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("YES")]),t._v(" "),a("td",[t._v("BTREE")]),t._v(" "),a("td"),t._v(" "),a("td")])])]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[t._v("建表的时候创建索引：")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("CREATE TABLE tableName(\n  id INT NOT NULL,\n  columnName  columnType,\n  INDEX [indexName] (columnName(length))\n);\n\n")])])]),a("h3",{attrs:{id:"查看索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看索引"}},[t._v("#")]),t._v(" 查看索引")]),t._v(" "),a("p",[t._v("可以通过"),a("code",[t._v("show")]),t._v("语句查看索引：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("SHOW INDEX FROM t_user_action_log;\n\n")])])]),a("table",[a("thead",[a("tr",[a("th",[t._v("Table")]),t._v(" "),a("th",[t._v("Non_unique")]),t._v(" "),a("th",[t._v("Key_name")]),t._v(" "),a("th",[t._v("Seq_in_index")]),t._v(" "),a("th",[t._v("Column_name")]),t._v(" "),a("th",[t._v("Collation")]),t._v(" "),a("th",[t._v("Cardinality")]),t._v(" "),a("th",[t._v("Sub_part")]),t._v(" "),a("th",[t._v("Packed")]),t._v(" "),a("th",[t._v("Null")]),t._v(" "),a("th",[t._v("Index_type")]),t._v(" "),a("th",[t._v("Comment")]),t._v(" "),a("th",[t._v("Index_comment")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("t_user_action_log")]),t._v(" "),a("td",[t._v("0")]),t._v(" "),a("td",[t._v("PRIMARY")]),t._v(" "),a("td",[t._v("1")]),t._v(" "),a("td",[t._v("id")]),t._v(" "),a("td",[t._v("A")]),t._v(" "),a("td",[t._v("199,368")]),t._v(" "),a("td"),t._v(" "),a("td"),t._v(" "),a("td"),t._v(" "),a("td",[t._v("BTREE")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("t_user_action_log")]),t._v(" "),a("td",[t._v("1")]),t._v(" "),a("td",[t._v("action")]),t._v(" "),a("td",[t._v("1")]),t._v(" "),a("td",[t._v("action")]),t._v(" "),a("td",[t._v("A")]),t._v(" "),a("td",[t._v("4")]),t._v(" "),a("td"),t._v(" "),a("td"),t._v(" "),a("td",[t._v("YES")]),t._v(" "),a("td",[t._v("BTREE")]),t._v(" "),a("td"),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("t_user_action_log")]),t._v(" "),a("td",[t._v("1")]),t._v(" "),a("td",[t._v("index_ip_addr")]),t._v(" "),a("td",[t._v("1")]),t._v(" "),a("td",[t._v("ip_address")]),t._v(" "),a("td",[t._v("A")]),t._v(" "),a("td",[t._v("1")]),t._v(" "),a("td",[t._v("16")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("YES")]),t._v(" "),a("td",[t._v("BTREE")]),t._v(" "),a("td"),t._v(" "),a("td")])])]),t._v(" "),a("h3",{attrs:{id:"删除索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除索引"}},[t._v("#")]),t._v(" 删除索引")]),t._v(" "),a("p",[t._v("使用"),a("code",[t._v("ALTER")]),t._v("命令可以删除索引，例如：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("ALTER TABLE t_user_action_log DROP INDEX index_ip_addr;\n\n")])])]),a("h1",{attrs:{id:"索引的使用原则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#索引的使用原则"}},[t._v("#")]),t._v(" 索引的使用原则")]),t._v(" "),a("p",[t._v("索引由于其提供的优越的查询性能，似乎不使用索引就是一个愚蠢的行为了。但是使用索引，是要付出时间和空间的代价的。因此，索引虽好不可贪多。")]),t._v(" "),a("p",[t._v("下面介绍几个索引的使用技巧和原则，在使用索引之前，你应该对它们有充分的认识。"),a("a",{attrs:{href:"https://link.juejin.cn?target=undefined",target:"_blank",rel:"noopener noreferrer"}},[a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"写操作比较频繁的列慎重加索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#写操作比较频繁的列慎重加索引"}},[t._v("#")]),t._v(" 写操作比较频繁的列慎重加索引")]),t._v(" "),a("p",[t._v("索引在提高查询速度的同时，也由于需要更新索引而带来了降低插入、删除和更新带索引列的速度的问题。一张数据表的索引越多，在写操作的时候性能下降的越厉害。"),a("a",{attrs:{href:"https://link.juejin.cn?target=undefined",target:"_blank",rel:"noopener noreferrer"}},[a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"索引越多占用磁盘空间越大"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#索引越多占用磁盘空间越大"}},[t._v("#")]),t._v(" 索引越多占用磁盘空间越大")]),t._v(" "),a("p",[t._v("与没有加索引比较，加索引会更快地使你的磁盘接近使用空间极限。"),a("a",{attrs:{href:"https://link.juejin.cn?target=undefined",target:"_blank",rel:"noopener noreferrer"}},[a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"不要为输出列加索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#不要为输出列加索引"}},[t._v("#")]),t._v(" 不要为输出列加索引")]),t._v(" "),a("p",[t._v("为查询条件、分组、连接条件的列加索引，而不是为查询输出结果的列加索引。")]),t._v(" "),a("p",[t._v("例如下面的查询语句：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("select ip_address from t_user_action_log\nwhere name='LiSi'\ngroup by action\norder by create_time;\n\n")])])]),a("p",[t._v("所以可以考虑增加在 "),a("code",[t._v("name")]),t._v(" "),a("code",[t._v("action")]),t._v(" "),a("code",[t._v("create_time")]),t._v(" 列上，而不是 "),a("code",[t._v("ip_address")]),t._v("。"),a("a",{attrs:{href:"https://link.juejin.cn?target=undefined",target:"_blank",rel:"noopener noreferrer"}},[a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"考虑维度优势"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#考虑维度优势"}},[t._v("#")]),t._v(" 考虑维度优势")]),t._v(" "),a("p",[t._v("例如"),a("code",[t._v("action")]),t._v("列的值包含：1、2、3、4、5，那么该列的维度就是5。")]),t._v(" "),a("p",[t._v("维度越高（理论上维度的最大值就是数据行的总数），数据列包含的独一无二的值就越多，索引的使用效果越好。")]),t._v(" "),a("p",[t._v("对于维度很低的数据列，索引几乎不会起作用，因此没有必要加索引。")]),t._v(" "),a("p",[t._v("例如性别列的值只有男和女，每种查询结果占比大约50%。一般当查询优化处理器发现查询结果超过全表的30%的时候，就会跳过索引，直接进行全表扫描。"),a("a",{attrs:{href:"https://link.juejin.cn?target=undefined",target:"_blank",rel:"noopener noreferrer"}},[a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"对短小的值加索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对短小的值加索引"}},[t._v("#")]),t._v(" 对短小的值加索引")]),t._v(" "),a("p",[t._v("对短小的值加索引，意味着索引所占的空间更小，可以减少I/O活动，同时比较索引的速度也更快。")]),t._v(" "),a("p",[t._v("尤其是主键，要尽可能短小。")]),t._v(" "),a("p",[t._v("另外，InnoDB使用的是聚集索引（clustered index），也就是把主键和数据行保存在一起。主键之外的其他索引都是二级索引，这些二级索引也保留着一份主键，这样在查询到索引以后，就可以根据主键找到对应的数据行。如果主键太长的话，会造成二级索引占用的空间变大。")]),t._v(" "),a("p",[t._v("比如下面的action索引保存了对应行的id。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/4/13/16a16cd7e4c60afc~tplv-t2oaga2asx-watermark.awebp",alt:""}})]),t._v(" "),a("h2",{attrs:{id:"为字符串前缀加索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为字符串前缀加索引"}},[t._v("#")]),t._v(" 为字符串前缀加索引")]),t._v(" "),a("p",[t._v("前边已经讲过短小索引的种种好处了，有时候一个字符串的前几个字符就能唯一标识这条记录，这个时候设置索引的长度就是非常划算的做法。")]),t._v(" "),a("p",[t._v("前面已经提供了设置索引"),a("code",[t._v("length")]),t._v("的例子，这里就不举例子了。")]),t._v(" "),a("h2",{attrs:{id:"复合索引的左侧索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#复合索引的左侧索引"}},[t._v("#")]),t._v(" 复合索引的左侧索引")]),t._v(" "),a("p",[t._v("创建复合索引的语法如下：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("CREATE INDEX indexName ON tableName (column1 DESC, column2 DESC, column3 ASC);\n\n")])])]),a("p",[a("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/4/13/16a16cd8f06a5b19~tplv-t2oaga2asx-watermark.awebp",alt:""}})]),t._v(" "),a("p",[t._v("我们可以看到，最左侧的column1索引总是有效的。")]),t._v(" "),a("h2",{attrs:{id:"索引加锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#索引加锁"}},[t._v("#")]),t._v(" 索引加锁")]),t._v(" "),a("p",[t._v("对于InnoDB来说，索引可以让查询锁住更少的行，从而可以在并发情况下拥有更佳表现。")]),t._v(" "),a("p",[t._v("下面演示一下查询锁与索引之间的关系。")]),t._v(" "),a("p",[t._v("前面使用的"),a("code",[t._v("t_user_action_log")]),t._v("表目前有一个"),a("code",[t._v("id")]),t._v("为主键，还有一个二级索引"),a("code",[t._v("action")]),t._v("。")]),t._v(" "),a("p",[t._v("下面这条语句的修改范围是"),a("code",[t._v("id")]),t._v("值为"),a("code",[t._v("1")]),t._v(" "),a("code",[t._v("2")]),t._v(" "),a("code",[t._v("3")]),t._v(" "),a("code",[t._v("4")]),t._v("所在的行，查询锁会锁住"),a("code",[t._v("id")]),t._v("值为"),a("code",[t._v("1")]),t._v(" "),a("code",[t._v("2")]),t._v(" "),a("code",[t._v("3")]),t._v(" "),a("code",[t._v("4")]),t._v(" "),a("code",[t._v("5")]),t._v("所在的行。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("update ijiangtao_local_db_mysql.t_user_action_log set name='c1' where id<5;\n\n")])])]),a("ol",[a("li",[t._v("首先创建数据库连接1，开启事务，并执行update语句")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("set autocommit=0;\n\nbegin;\n\nupdate ijiangtao_local_db_mysql.t_user_action_log set name='c1' where id<5;\n\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("然后开启另外一个连接2，分别执行下面几个update语句")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("-- 没有被锁\nupdate ijiangtao_local_db_mysql.t_user_action_log set name='c2' where id=6;\n-- 被锁\nupdate ijiangtao_local_db_mysql.t_user_action_log set name='c2' where id=5;\n\n")])])]),a("p",[t._v("你会发现"),a("code",[t._v("id=5")]),t._v("的数据行已经被锁定，"),a("code",[t._v("id=6")]),t._v("的数据行可以正常提交。")]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[t._v("连接1提交事务，连接2的"),a("code",[t._v("id=1")]),t._v("和"),a("code",[t._v("id=5")]),t._v("的数据行可以update成功了。")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("-- 在连接1提交事务\ncommit;\n\n")])])]),a("p",[a("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/4/14/16a19d4715c56d0a~tplv-t2oaga2asx-watermark.awebp",alt:"mysql index lock"}})]),t._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[t._v("如果不使用索引")])]),t._v(" "),a("p",[a("code",[t._v("ip_address")]),t._v("没有索引的话，会锁定全表。")]),t._v(" "),a("p",[t._v("连接1开启事务以后"),a("code",[t._v("commit;")]),t._v("之前，连接2对该表的update全部需要等待连接1释放锁。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("set autocommit=0;\n\nbegin;\n\nupdate ijiangtao_local_db_mysql.t_user_action_log set name='c1' where ip_address='8.8.8.1';\n\n")])])]),a("p",[a("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/4/14/16a19d4715edce93~tplv-t2oaga2asx-watermark.awebp",alt:"mysql index lock"}})]),t._v(" "),a("h2",{attrs:{id:"覆盖索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#覆盖索引"}},[t._v("#")]),t._v(" 覆盖索引")]),t._v(" "),a("p",[t._v("如果索引包含满足查询的所有数据，就被称为覆盖索引(Covering Indexes)，覆盖索引非常强大，可以大大提高查询性能。")]),t._v(" "),a("p",[t._v("覆盖索引高性能的原因是：")]),t._v(" "),a("ul",[a("li",[t._v("索引通常比记录要小，覆盖索引查询只需要读索引，而不需要读记录。")]),t._v(" "),a("li",[t._v("索引都按照值的大小进行顺序存储，相比与随机访问记录，需要更少的I/0。")]),t._v(" "),a("li",[t._v("大多数数据引擎能更好的缓存索引，例如MyISAM只缓存索引。")])]),t._v(" "),a("p",[a("code",[t._v("ijiangtao_local_db_mysql")]),t._v("表的"),a("code",[t._v("action")]),t._v("列包含索引。使用"),a("code",[t._v("explain")]),t._v("分析下面的查询语句，对于索引覆盖查询(index-covered query)，分析结果"),a("code",[t._v("Extra")]),t._v("的值是"),a("code",[t._v("Using index")]),t._v("，表示使用了覆盖索引 :")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("explain select `action` from ijiangtao_local_db_mysql.t_user_action_log;\n\n")])])]),a("table",[a("thead",[a("tr",[a("th",[t._v("id")]),t._v(" "),a("th",[t._v("select_type")]),t._v(" "),a("th",[t._v("table")]),t._v(" "),a("th",[t._v("partitions")]),t._v(" "),a("th",[t._v("type")]),t._v(" "),a("th",[t._v("possible_keys")]),t._v(" "),a("th",[t._v("key")]),t._v(" "),a("th",[t._v("key_len")]),t._v(" "),a("th",[t._v("ref")]),t._v(" "),a("th",[t._v("rows")]),t._v(" "),a("th",[t._v("filtered")]),t._v(" "),a("th",[t._v("Extra")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("1")]),t._v(" "),a("td",[t._v("SIMPLE")]),t._v(" "),a("td",[t._v("t_user_action_log")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("index")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("action")]),t._v(" "),a("td",[t._v("5")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("199,703")]),t._v(" "),a("td",[t._v("100.00")]),t._v(" "),a("td",[t._v("Using index")])])])]),t._v(" "),a("h2",{attrs:{id:"聚簇索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#聚簇索引"}},[t._v("#")]),t._v(" 聚簇索引")]),t._v(" "),a("p",[t._v("聚簇索引(Clustered Indexes)保证关键字的值相近的元组存储的物理位置也相同，且一个表只能有一个聚簇索引。")]),t._v(" "),a("p",[t._v("字符串类型不建议使用聚簇索引，特别是随机字符串，因为它们会使系统进行大量的移动操作。")]),t._v(" "),a("p",[t._v("并不是所有的存储引擎都支持聚簇索引，目前InnoDB支持。")]),t._v(" "),a("p",[t._v("如果使用聚簇索引，最好使用"),a("code",[t._v("AUTO_INCREMENT")]),t._v("列作为主键，应该尽量避免使用随机的聚簇主键。")]),t._v(" "),a("p",[t._v("从物理位置上看，聚簇索引表比非聚簇的索引表，有更好的访问性能。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/4/14/16a19d4720e66665~tplv-t2oaga2asx-watermark.awebp",alt:"聚簇索引与非聚簇索引"}})]),t._v(" "),a("h2",{attrs:{id:"选择合适的索引类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#选择合适的索引类型"}},[t._v("#")]),t._v(" 选择合适的索引类型")]),t._v(" "),a("p",[t._v("从数据结构角度来看，MySQL支持的索引类型有B树索引、Hash索引等。")]),t._v(" "),a("ul",[a("li",[t._v("B树索引")])]),t._v(" "),a("p",[t._v("B树索引对于<、<=、 =、 >=、 >、 <>、!=、 between查询，进行精确比较操作和范围比较操作都有比较高的效率。")]),t._v(" "),a("p",[t._v("B树索引也是InnoDB存储引擎默认的索引结构。")]),t._v(" "),a("ul",[a("li",[t._v("Hash索引")])]),t._v(" "),a("p",[t._v("Hash索引仅能满足=、<=>、in查询。")]),t._v(" "),a("p",[t._v("Hash索引检索效率非常高，索引的检索可以一次定位，不像B树索引需要从根节点到枝节点，最后才能访问到页节点这样多次的I/O访问，所以Hash索引的查询效率要远高于B树索引。但Hash索引不能使用范围查询。")]),t._v(" "),a("h1",{attrs:{id:"查询优化建议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查询优化建议"}},[t._v("#")]),t._v(" 查询优化建议")]),t._v(" "),a("p",[t._v("下面提供几个查询优化的建议。")]),t._v(" "),a("h2",{attrs:{id:"使用explain分析查询语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用explain分析查询语句"}},[t._v("#")]),t._v(" 使用explain分析查询语句")]),t._v(" "),a("p",[t._v("前面已经演示过如何使用"),a("code",[t._v("explain")]),t._v("命令分析查询语句了，这里再解释一下其中几个有参考价值的字段的含义：")]),t._v(" "),a("h3",{attrs:{id:"select-type"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#select-type"}},[t._v("#")]),t._v(" select_type")]),t._v(" "),a("p",[t._v("select_type表示查询中每个select子句的类型，一般有下面几个值:")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("SIMPLE 简单SELECT,不使用UNION或子查询等。")])]),t._v(" "),a("li",[a("p",[t._v("PRIMARY 查询中若包含任何复杂的子部分,最外层的select被标记为PRIMARY。")])]),t._v(" "),a("li",[a("p",[t._v("UNION UNION中的第二个或后面的SELECT语句。")])]),t._v(" "),a("li",[a("p",[t._v("DEPENDENT UNION UNION中的第二个或后面的SELECT语句，取决于外面的查询。")])]),t._v(" "),a("li",[a("p",[t._v("UNION RESULT UNION的结果。")])]),t._v(" "),a("li",[a("p",[t._v("SUBQUERY 子查询中的第一个SELECT。")])]),t._v(" "),a("li",[a("p",[t._v("DEPENDENT SUBQUERY 子查询中的第一个SELECT，取决于外面的查询。")])]),t._v(" "),a("li",[a("p",[t._v("DERIVED 派生表的SELECT, FROM子句的子查询。")])]),t._v(" "),a("li",[a("p",[t._v("UNCACHEABLE SUBQUERY 一个子查询的结果不能被缓存，必须重新评估外链接的第一行。")])])]),t._v(" "),a("h3",{attrs:{id:"type"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#type"}},[t._v("#")]),t._v(" type")]),t._v(" "),a("p",[t._v("type表示MySQL在表中找到所需行的方式，又称“访问类型”，常用的类型有：")]),t._v(" "),a("p",[t._v("ALL, index, range, ref, eq_ref, const, system, NULL。")]),t._v(" "),a("p",[t._v("从左到右，性能从差到好。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("ALL： Full Table Scan，MySQL将遍历全表以找到匹配的行。")])]),t._v(" "),a("li",[a("p",[t._v("index: Full Index Scan，index与ALL区别为index类型只遍历索引树。")])]),t._v(" "),a("li",[a("p",[t._v("range: 只检索给定范围的行，使用一个索引来选择行。")])]),t._v(" "),a("li",[a("p",[t._v("ref: 表示上述表的连接匹配条件，即哪些列或常量被用于查找索引列上的值。")])]),t._v(" "),a("li",[a("p",[t._v("eq_ref: 类似ref，区别就在使用的索引是唯一索引，对于每个索引键值，表中只有一条记录匹配，简单来说，就是多表连接中使用primary key或者 unique key作为关联条件。")])]),t._v(" "),a("li",[a("p",[t._v("const: 当MySQL对查询某部分进行优化，并转换为一个常量时，使用这些类型访问。 如将主键置于where列表中，MySQL就能将该查询转换为一个常量。")])]),t._v(" "),a("li",[a("p",[t._v("NULL: MySQL在优化过程中分解语句，执行时甚至不用访问表或索引，例如从一个索引列里选取最小值可以通过单独索引查找完成。")])])]),t._v(" "),a("h3",{attrs:{id:"key"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#key"}},[t._v("#")]),t._v(" Key")]),t._v(" "),a("p",[t._v("key列显示MySQL实际决定使用的键（索引），如果没有选择索引，键是NULL。")]),t._v(" "),a("h3",{attrs:{id:"possible-keys"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#possible-keys"}},[t._v("#")]),t._v(" possible_keys")]),t._v(" "),a("p",[t._v("possible_keys指出MySQL能使用哪个索引在表中找到记录，查询涉及到的字段上如果存在索引则该索引将被列出，但不一定被查询使用。")]),t._v(" "),a("h3",{attrs:{id:"ref"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ref"}},[t._v("#")]),t._v(" ref")]),t._v(" "),a("p",[t._v("ref表示上述表的连接匹配条件，即哪些列或常量被用于查找索引列上的值。")]),t._v(" "),a("h3",{attrs:{id:"rows"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rows"}},[t._v("#")]),t._v(" rows")]),t._v(" "),a("p",[t._v("rows表示MySQL根据表统计信息，以及索引选用的情况，找到所需记录需要读取的行数。这个行数是估算的值，实际行数可能不同。")]),t._v(" "),a("h2",{attrs:{id:"声明not-null"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#声明not-null"}},[t._v("#")]),t._v(" 声明NOT NULL")]),t._v(" "),a("p",[t._v("当数据列被声明为NOT NULL以后，在查询的时候就不需要判断是否为NULL，由于减少了判断，可以降低复杂性，提高查询速度。")]),t._v(" "),a("p",[t._v("如果要表示数据列为空，可以使用0等代替。")]),t._v(" "),a("h2",{attrs:{id:"考虑使用数值类型代替字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#考虑使用数值类型代替字符串"}},[t._v("#")]),t._v(" 考虑使用数值类型代替字符串")]),t._v(" "),a("p",[t._v("MySQL对数值类型的处理速度要远远快于字符串，而且数值类型往往更加节省空间。")]),t._v(" "),a("p",[t._v("例如对于“Male”和“Female”可以用“0”和“1”进行代替。")]),t._v(" "),a("h2",{attrs:{id:"考虑使用enum类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#考虑使用enum类型"}},[t._v("#")]),t._v(" 考虑使用ENUM类型")]),t._v(" "),a("p",[t._v("如果你的数据列的取值是确定有限的，可以使用ENUM类型代替字符串。因为MySQL会把这些值表示为一系列对应的数字，这样处理的速度会提高很多。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("CREATE TABLE shirts (\n    name VARCHAR(40),\n    size ENUM('x-small', 'small', 'medium', 'large', 'x-large')\n);\n\nINSERT INTO shirts (name, size) VALUES ('dress shirt','large'), ('t-shirt','medium'),\n  ('polo shirt','small');\n\nSELECT name, size FROM shirts WHERE size = 'medium';\n\n")])])]),a("h1",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("p",[t._v("索引是一个单独的，存储在磁盘上的数据结构，索引对数据表中一列或者多列值进行排序，索引包含着对数据表中所有数据的引用指针。")]),t._v(" "),a("p",[t._v("本教程从MySQL开始讲起，又介绍了MySQL中索引的使用，最后提供了使用索引的几条原则和优化查询的几个方法。")]),t._v(" "),a("p",[t._v("无论你是DBA还是软件开发，菜鸟程序员还是资深工程师，相信本节提到的关于索引的知识，对你都会有所帮助。")]),t._v(" "),a("p",[t._v("声明: 文章转载自:"),a("a",{attrs:{href:"https://juejin.cn/post/6844903818056974350#heading-22",target:"_blank",rel:"noopener noreferrer"}},[t._v("MySQL索引与查询优化"),a("OutboundLink")],1)])])}),[],!1,null,null,null);_.default=v.exports}}]);